<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd 
        
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
        
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        ">

	<context:component-scan base-package="activiti"></context:component-scan>
	
	<context:property-placeholder location="classpath:db.properties" />

	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:jdbcUrl="${jdbc.jdbcUrl}" 
		p:driverClass="${jdbc.driverClass}"
		p:user="root" 
		p:password="123" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean>	
	
	<!--事务管理-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 注解方式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<!-- MapperScannerConfigurer简单理解是扫描包下的所有接口，自动解析相应的配置文件，所以配置文件名和接口名要相同，
		那么此时mybatis.xml中就不需要配置mapper文件的位置了
		然后通过sessionFactory生成指定包下所有接口的代理实现类
		那么在spring容器初始化时，就会生成包下所有接口的bean
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<import resource="classpath:spring-activiti.xml"/>
	
</beans>


